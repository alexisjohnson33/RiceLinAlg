<problem display_name="More Row Operations" linenum="145" tex_filename="./block1/linearequations.tex" showanswer="finished" attempts="1" rerandomize="per_student">
  <text>
    <p>
Consider this system of equations. </p>
    <table id="a0000000008" cellpadding="7" width="100%" cellspacing="0" class="eqnarray" style="table-layout:auto">
      <tr id="a0000000009">
        <td style="width:40%; border:none">&#xA0;</td>
        <td style="vertical-align:middle;                                    text-align:right; border:none">
	    [mathjaxinline]\displaystyle  0x_1 + 1x_2 + 1x_3[/mathjaxinline]
        </td>
        <td style="vertical-align:middle;                                    text-align:center; border:none">
	    [mathjaxinline]\displaystyle  =[/mathjaxinline]
        </td>
        <td style="vertical-align:middle;                                    text-align:left; border:none">
	    [mathjaxinline]\displaystyle  2[/mathjaxinline]
        </td>
        <td style="width:40%; border:none">&#xA0;</td>
        <td style="width:20%; border:none" class="eqnnum"/>
      </tr>
      <tr id="a0000000010">
        <td style="width:40%; border:none">&#xA0;</td>
        <td style="vertical-align:middle;                                    text-align:right; border:none">
	    [mathjaxinline]\displaystyle 1x_1 + 2x_2 + 1x_3[/mathjaxinline]
        </td>
        <td style="vertical-align:middle;                                    text-align:center; border:none">
	    [mathjaxinline]\displaystyle  =[/mathjaxinline]
        </td>
        <td style="vertical-align:middle;                                    text-align:left; border:none">
	    [mathjaxinline]\displaystyle  3[/mathjaxinline]
        </td>
        <td style="width:40%; border:none">&#xA0;</td>
        <td style="width:20%; border:none" class="eqnnum"/>
      </tr>
      <tr id="a0000000011">
        <td style="width:40%; border:none">&#xA0;</td>
        <td style="vertical-align:middle;                                    text-align:right; border:none">
	    [mathjaxinline]\displaystyle 2x_1 + 6x_2 + 4x_3[/mathjaxinline]
        </td>
        <td style="vertical-align:middle;                                    text-align:center; border:none">
	    [mathjaxinline]\displaystyle  =[/mathjaxinline]
        </td>
        <td style="vertical-align:middle;                                    text-align:left; border:none">
	    [mathjaxinline]\displaystyle  10[/mathjaxinline]
        </td>
        <td style="width:40%; border:none">&#xA0;</td>
        <td style="width:20%; border:none" class="eqnnum"/>
      </tr>
    </table>
    <p>
Do the following row operations to the augmented matrix. First, switch the first two rows. Then replace the third row with the third row minus twice the first row. Next, replace the first row with the first row minus twice the second row. Finally, replace the third row with the third row minus twice the second row. What matrix do you get as a result? </p>
    <script linenum="1" filename="./matrixentry.tex" type="text/python" system_path="python_lib">
def MatrixGrader(expect, ans):
	tolerance = 0.01
	ret={'ok':False}
	ans.replace(' ','')
	nums = ans.split(',')
	expnums = expect.split(',')
	if (expect == 'None') or (expect =='none'):
		ret['ok']= (nums[0] == 'None') or (nums[0]=='none')
	elif (nums[0] == "none") or (nums[0] == "None"):
	    ret['msg']="There are critical points!  your answer should involve decimal numbers only!"
	else:
		try:
			expnum=[float(i) for i in expnums]
			ansnum=[float(i) for i in nums]
			explist = sorted(expnum, key=float)
			anslist = sorted(ansnum, key=float) 
			matching = True
			if len(explist)!=len(anslist):
			    if len(anslist)&lt;len(explist):
			    	ret['msg']="You did not enter enough critical points."
			    else:
			    	ret['msg']="You entered too many critical points."
		 	else:
				for i in range(len(explist)):
					errorcnt=0
					if (explist[i]-anslist[i]&gt;tolerance) or (-explist[i]+anslist[i]&gt;tolerance):
						matching = False
						errorcnt+=1
					if errorcnt != 0:
						ret['msg']= "You have %d errors in your answer." % errorcnt
				ret['ok']=matching
		except:
		    ret['msg']="Your answer should only involve decimal numbers."
	return ret
  
</script>
    <p>
      <optionresponse>
        <optioninput options="('Placeholder')" correct="Placeholder"/>
      </optionresponse>
    </p>
    <p>
      <solution>
        <font color="blue">Answer: </font>
        <font color="blue"/>
      </solution>
    </p>
  </text>
</problem>
