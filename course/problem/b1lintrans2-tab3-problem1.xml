<problem display_name="The E Vectors" linenum="117" tex_filename="./block1/lineartransformationsinRn.tex" showanswer="finished" attempts="1" rerandomize="per_student">
  <text>
    <p>
Suppose [mathjaxinline]T: \mathbb R^4\rightarrow \mathbb R^3[/mathjaxinline] is given by [mathjaxinline]T(x) = Ax[/mathjaxinline] where </p>
    <table id="a0000000060" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
      <tr>
        <td class="equation" style="width:80%;vertical-align:middle;text-align:center;border-style:hidden">[mathjax]A = \left[ \begin{array}{cc} 1 &amp;  3 &amp;  5 &amp;  7 \\ 2 &amp;  0 &amp;  -1 &amp;  -1 \\ 1 &amp;  1 &amp;  3 &amp;  -2 \end{array} \right].[/mathjax]</td>
        <td class="eqnnum" style="width:20%;vertical-align:middle;text-align:left;border-style:hidden"/>
      </tr>
    </table>
    <p>
What is [mathjaxinline]T(e_3)[/mathjaxinline]? </p>
    <p>
To enter a vector such as [mathjaxinline]\left[\begin{array}{c} 1 \\ 2 \\ 3 \end{array} \right][/mathjaxinline], you can either: </p>
    <ul class="itemize">
      <li>
        <p>
enter it as you would a [mathjaxinline]3\times 1[/mathjaxinline] matrix: [[1],[2],[3]] </p>
      </li>
      <li>
        <p>
or, you can enter it as &lt;1,2,3&gt; </p>
      </li>
    </ul>
    <p>
Use decimals only. </p>
    <script linenum="12" filename="./vectorentry.tex" type="text/python" system_path="python_lib">
def VectorEntry(expect, ans):
	import ast
	import numpy as np 
  	atol = 0.01
	list_expect = ast.literal_eval(expect)
	vec_expect = np.matrix(list_expect)
  	ret = {"ok":False}
	try:
  		# input format [[1],[2],[3]]
		list_ans = ast.literal_eval(ans)
		vec_ans = np.matrix(list_ans)
  		if vec_ans.shape != vec_expect.shape:
  			ret['msg'] = 'Wrong shape of vector!'
  		elif np.allclose(vec_ans, vec_expect,atol,1e-08):
  			ret['ok'] = True
  		else:
  		# More error message. Will improve this part
  			ret['msg'] = 'something is wrong'   			
	#except SyntaxError:
		#ret['msg'] = 'Wrong input format'
	except SyntaxError:
  		# input format &amp;lt;1,2,3&amp;gt;
		list_ans = ans.replace('&amp;lt;', '[').replace('&amp;gt;', ']')
		list_ans = ast.literal_eval(list_ans)
		vec_ans = np.transpose(np.matrix(list_ans))
  		if vec_ans.shape != vec_expect.shape:
  			ret['msg'] = 'Wrong shape of vector!'
  		elif np.allclose(vec_ans, vec_expect,0.01,1e-08):
  			ret['ok'] = True
  		else:
    		# More error message. Will improve this part
  			ret['msg'] = 'something is wrong' 
  	except:
  		ret['msg'] = 'Wrong input format'
  	return ret 
</script>
    <p>
      <customresponse cfn="VectorEntry" expect="[[5],[-1],[3]]">
        <textline correct_answer="[[5],[-1],[3]]"/>
      </customresponse>
    </p>
    <p>
      <solution>
        <font color="blue">Answer: </font>
        <font color="blue"/>
      </solution>
    </p>
  </text>
</problem>
