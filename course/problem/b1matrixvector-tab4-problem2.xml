<problem display_name="Another Matrix-Vector Equation" linenum="213" tex_filename="./block1/matrixtimesvector.tex" showanswer="finished" attempts="1" rerandomize="per_student">
  <text>
    <p>
Let [mathjaxinline]A[/mathjaxinline] be a [mathjaxinline]3\times 4[/mathjaxinline] matrix with columns [mathjaxinline]v_1, v_2, v_3, v_4[/mathjaxinline]. That is, </p>
    <table id="a0000000051" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
      <tr>
        <td class="equation" style="width:80%;vertical-align:middle;text-align:center;border-style:hidden">[mathjax]A = \left[ \begin{array}{cccc} | &amp;  | &amp;  | &amp;  | \\ v_1 &amp;  v_2 &amp;  v_3 &amp;  v_4 \\ | &amp;  | &amp;  | &amp;  | \end{array} \right].[/mathjax]</td>
        <td class="eqnnum" style="width:20%;vertical-align:middle;text-align:left;border-style:hidden"/>
      </tr>
    </table>
    <p>
 Find a solution to the equation [mathjaxinline]Ax = v_2[/mathjaxinline]. </p>
    <script linenum="1" filename="./vectorentry.tex" type="text/python" system_path="python_lib">
def MatrixGrader(expect, ans):
	tolerance = 0.01
	ret={'ok':False}
	ans.replace(' ','')
	nums = ans.split(',')
	expnums = expect.split(',')
	if (expect == 'None') or (expect =='none'):
		ret['ok']= (nums[0] == 'None') or (nums[0]=='none')
	elif (nums[0] == "none") or (nums[0] == "None"):
	    ret['msg']="There are critical points!  your answer should involve decimal numbers only!"
	else:
		try:
			expnum=[float(i) for i in expnums]
			ansnum=[float(i) for i in nums]
			explist = sorted(expnum, key=float)
			anslist = sorted(ansnum, key=float) 
			matching = True
			if len(explist)!=len(anslist):
			    if len(anslist)&lt;len(explist):
			    	ret['msg']="You did not enter enough critical points."
			    else:
			    	ret['msg']="You entered too many critical points."
		 	else:
				for i in range(len(explist)):
					errorcnt=0
					if (explist[i]-anslist[i]&gt;tolerance) or (-explist[i]+anslist[i]&gt;tolerance):
						matching = False
						errorcnt+=1
					if errorcnt != 0:
						ret['msg']= "You have %d errors in your answer." % errorcnt
				ret['ok']=matching
		except:
		    ret['msg']="Your answer should only involve decimal numbers."
	return ret
  
</script>
    <p>
      <optionresponse>
        <optioninput options="('Placeholder')" correct="Placeholder"/>
      </optionresponse>
    </p>
    <p>
      <solution>
        <font color="blue">Answer: </font>
        <font color="blue">
          <p>
 We need not perform any row reduction here. Our desired result [mathjaxinline]v_2[/mathjaxinline] can be written <br/><br/>[mathjaxinline]0v_1 + 1 v_2 + 0 v_3 + 0 v_4[/mathjaxinline] , so <br/><br/>[mathjaxinline]x = \left[ \begin{array}{c} 0 \\ 1 \\ 0 \\ 0 \end{array} \right][/mathjaxinline] is a solution to the equation. </p>
        </font>
      </solution>
    </p>
  </text>
</problem>
